[{"content":"git add .","timestamp":[2025,7,17,22,29,26,408755300]},{"content":"     # Eclipse/VS Code files\n     .classpath\n     .project\n     .settings/\n     .vscode/\n\n     # Java build outputs\n     bin/\n     *.class\n\n     # JavaFX/JAR dependencies\n     lib/\n\n     # OS-specific files\n     .DS_Store\n     Thumbs.db\n\n     # Other\n     *.log\n     ```","timestamp":[2025,7,17,22,29,3,408326600]},{"content":"git init","timestamp":[2025,7,17,22,28,2,410715800]},{"content":"A modern, open-source clipboard manager built with JavaFX and Maven. ClipCop offers persistent history, quick paste, and search across Windows, Mac, and Linux.","timestamp":[2025,7,17,22,27,27,909679600]},{"content":"\"ClipCop is an open-source, cross-platform (Windows, Mac, Linux) clipboard manager with a 30-day history, instant search, and a quick paste popup. Built with JavaFX.","timestamp":[2025,7,17,22,27,16,911201300]},{"content":"clipcop","timestamp":[2025,7,17,22,26,10,409121800]},{"content":"MIT License\n\nCopyright (c) 2025 [Your Name or Project Contributors]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","timestamp":[2025,7,17,22,24,6,908790200]},{"content":"License","timestamp":[2025,7,17,22,23,38,908270900]},{"content":"# ClipCop: Your Smart Clipboard Manager\n\n[![JavaFX](https://img.shields.io/badge/JavaFX-24.0.1-blue?style=for-the-badge&logo=javafx&logoColor=white)](https://openjfx.io/)\n[![Java](https://img.shields.io/badge/Java-24-red?style=for-the-badge&logo=openjdk&logoColor=white)](https://openjdk.org/projects/jdk/24/)\n[![Jackson](https://img.shields.io/badge/Jackson-2.18.0-orange?style=for-the-badge&logo=jackson&logoColor=white)](https://github.com/FasterXML/jackson)\n[![Maven](https://img.shields.io/badge/Build%20with-Maven-red?style=for-the-badge&logo=apache-maven&logoColor=white)](https://maven.apache.org/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg?style=for-the-badge)](https://opensource.org/licenses/MIT)\n[![Platform: Windows | Mac | Linux](https://img.shields.io/badge/Platform-Windows%20%7C%20Mac%20%7C%20Linux-brightgreen?style=for-the-badge&logo=windows&logoColor=white&logo=apple&logoColor=white&logo=linux&logoColor=white)](https://www.google.com)\n\n---\n\n\uD83D\uDC4B Meet **ClipCop**: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 **ClipCop** is here to make your digital life incredibly smoother, no matter if you're on **Windows, Mac, or Linux!**\n\n## Why ClipCop?\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n* \uD83D\uDCBE **Keeps History Alive:** Forget about losing track! ClipCop stores up to **100 clipboard items for 30 days**, so you can always go back and grab what you need.\n* ☁️ **Feather-Light:** We've made it super efficient! ClipCop **uses minimal memory** with intelligent text compression, keeping your system quick and responsive.\n* \uD83D\uDD0D **Instant Search:** Looking for something specific? Just type! Our **powerful search feature** lets you quickly find any copied text.\n* \uD83D\uDCA1 **Open Source:** Transparency matters! ClipCop is **freely available under the MIT License**, meaning it's built with community trust and is always improving.\n\n---\n\n## Features\n\n* **Clipboard History:** Stores up to 100 recent clipboard entries for easy retrieval.\n* **Quick Paste Popup:** Access your top 10 most recent items with a single click or keypress (Enter to paste, Esc to close).\n* **Searchable History:** Instantly filter your entire clipboard history via a convenient search bar.\n* **Dark/Light Mode:** Seamlessly switch between elegant glassmorphic dark and light themes to suit your preference.\n* **Cross-Platform:** Designed to run smoothly on Windows, Mac, and Linux operating systems.\n* **Draggable UI:** Easily reposition windows by dragging the title bar.\n* **Persistent Storage:** Your clipboard history is automatically saved to `data/clipboard_history.json`, so it's always there when you reopen ClipCop.\n\n---\n\n## Prerequisites\n\nTo get ClipCop up and running, you'll need the following:\n\n* **Java 24 (JDK 24):** Download the latest JDK from [Oracle](https://www.oracle.com/java/technologies/downloads/) or [OpenJDK](https://openjdk.org/install/).\n* **Apache Maven:** A powerful build automation tool. Download it from the [official Maven website](https://maven.apache.org/download.cgi).\n\n---\n\n## Setup (with Maven)\n\nFollow these steps to set up and run ClipCop using Maven:\n\n1.  **Clone the Repository:**\n    ```bash\n    git clone [https://github.com/your-username/ClipCop.git](https://github.com/your-username/ClipCop.git) # Replace with your actual repo URL\n    cd ClipCop\n    ```\n    *(If you're starting from scratch without Git, manually create the `clipcop` directory and skip this step, but consider using Git!)*\n\n2.  **Project Structure:**\n    Ensure your project structure includes `src/main/java`, `src/main/resources`, `lib` (if you have specific non-Maven JARs), and `data`.\n    *(You can still use `mkdir -p src/main/java/com/clipboard/controller ... lib data .vscode` if you're not cloning.)*\n\n3.  **Initialize History:**\n    Create an empty JSON file for your clipboard history:\n    ```bash\n    echo \"[]\" > data/clipboard_history.json\n    ```\n\n4.  **Maven `pom.xml`:**\n    Create a `pom.xml` file in the root of your `ClipCop` project directory with the following content. This will manage your JavaFX and Jackson dependencies.\n\n    ```xml\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <project xmlns=\"[http://maven.apache.org/POM/4.0.0](http://maven.apache.org/POM/4.0.0)\"\n             xmlns:xsi=\"[http://www.w3.org/2001/XMLSchema-instance](http://www.w3.org/2001/XMLSchema-instance)\"\n             xsi:schemaLocation=\"[http://maven.apache.org/POM/4.0.0](http://maven.apache.org/POM/4.0.0) [http://maven.apache.org/xsd/maven-4.0.0.xsd](http://maven.apache.org/xsd/maven-4.0.0.xsd)\">\n        <modelVersion>4.0.0</modelVersion>\n\n        <groupId>com.clipboard</groupId>\n        <artifactId>clipcop</artifactId>\n        <version>1.0-SNAPSHOT</version>\n\n        <properties>\n            <maven.compiler.source>24</maven.compiler.source>\n            <maven.compiler.target>24</maven.compiler.target>\n            <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n            <javafx.version>24.0.1</javafx.version>\n            <jackson.version>2.18.0</jackson.version>\n            <main.class>com.clipboard.MainApp</main.class> </properties>\n\n        <dependencies>\n            <dependency>\n                <groupId>org.openjfx</groupId>\n                <artifactId>javafx-controls</artifactId>\n                <version>${javafx.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openjfx</groupId>\n                <artifactId>javafx-fxml</artifactId>\n                <version>${javafx.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openjfx</groupId>\n                <artifactId>javafx-graphics</artifactId>\n                <version>${javafx.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.datatype</groupId>\n                <artifactId>jackson-datatype-jsr310</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n        </dependencies>\n\n        <build>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.11.0</version>\n                    <configuration>\n                        <source>${maven.compiler.source}</source>\n                        <target>${maven.compiler.target}</target>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.openjfx</groupId>\n                    <artifactId>javafx-maven-plugin</artifactId>\n                    <version>0.0.8</version> <configuration>\n                        <mainClass>${main.class}</mainClass>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>default-cli</id>\n                        </execution>\n                        <execution>\n                            <id>jar</id>\n                            <goals>\n                                <goal>jlink</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </build>\n    </project>\n    ```\n\n5.  **Add Project Files:**\n    Copy all your source files (Java classes, FXML files, `styles.css`) into the standard Maven directory structure.\n    * Java files go in `src/main/java/com/clipboard/` (e.g., `MainApp.java`, `ClipboardController.java`).\n    * FXML and CSS files go in `src/main/resources/com/clipboard/`.\n    Ensure your `.vscode/launch.json` and `.vscode/settings.json` are configured for a Maven project.\n\n6.  **Run App (using Maven):**\n    Open your terminal in the `ClipCop` project root directory and run:\n    ```bash\n    mvn clean javafx:run\n    ```\n    This command will download dependencies, compile your code, and run the application.\n\n---\n\n## Usage\n\nClipCop is designed to be intuitive and easy to use:\n\n* **Main Window:**\n    * View and search your complete clipboard history.\n    * Click the \"Show Quick Paste\" button to bring up the handy popup.\n    * Toggle between sleek dark and light modes with the \"\uD83C\uDF19\" / \"☀\" button.\n    * Drag the window by its title bar to reposition it.\n    * Use the \"`-`\" button to minimize and \" `X` \" to close the application.\n\n* **Quick Paste Popup:**\n    * Displays your top 10 most recent clipboard items.\n    * Simply click an item or press `Enter` to paste it into your active application.\n    * Press `Esc` to quickly close the popup.\n    * Toggle dark/light mode with its dedicated button.\n    * Drag the popup by its title bar to move it around.\n\n* **Copy Text:**\n    * Just copy text as you normally would! ClipCop automatically captures it and adds it to your history (up to 100 items).\n\n---\n\n## Future Advancements\n\nWe're constantly dreaming up ways to make ClipCop even more powerful and indispensable! Here are some features we're considering for future releases:\n\n* **Image & File Support:** Expand clipboard history to include copied images and files, not just text.\n* **Cloud Synchronization:** Securely sync your clipboard history across multiple devices.\n* **Customizable Hotkeys:** Allow users to define their own key combinations for quick paste and other actions.\n* **Clipboard Snippets/Templates:** Store frequently used text snippets or code templates for quick insertion.\n* **Enhanced UI/UX:** Continuous improvements to the user interface for an even more intuitive and beautiful experience.\n* **OCR Integration:** (Optical Character Recognition) Potentially allow copying text directly from images.\n\n---\n\n## License\n\nClipCop is open source and distributed under the **MIT License**. Feel free to use, modify, and distribute it as you wish!\n\n## Contributing\n\nContributions are absolutely welcome! If you have ideas for improvements or find a bug, please fork the repository, make your changes, and submit a pull request.\n\n## Troubleshooting\n\nEncountering issues? Here are some common fixes:\n\n* **`Maven Not Found`:** Ensure Maven is installed and added to your system's PATH.\n* **`JavaFX not found/module-related errors`:** Verify your `pom.xml` is correct and Maven is building/running correctly. The `javafx-maven-plugin` usually handles module path issues.\n* **`Class Version Error`:** Make sure you are definitely using **JDK 24** (you can check with `java -version` in your terminal).\n* **`JSON Errors`:** Verify that `data/clipboard_history.json` exists and starts with `[]`.\n* **`Dark Mode Issues`:** Ensure your `styles.css` file correctly defines the `.root:dark` and `.component` selectors.\n\nIf you're still stuck, please report issues or errors in the repository, and we'll do our best to help!\n\n---\n\nBuilt by **SMD-Thousif**. Because copying and pasting shouldn't feel like a memory test. \uD83D\uDE09","timestamp":[2025,7,17,22,23,17,908329200]},{"content":"improvements:\nMAVEN dependency manager so that users can easily install the required libraries\nfuture Advancements","timestamp":[2025,7,17,22,22,19,910408200]},{"content":"Here's a refined `README.md` for ClipCop, including shield icons, a polished design, and a touch of humor at the end\\!\n\n````markdown\n# ClipCop: Your Smart Clipboard Manager\n\n[![JavaFX](https://img.shields.io/badge/JavaFX-24.0.1-blue?style=for-the-badge&logo=javafx&logoColor=white)](https://openjfx.io/)\n[![Java](https://img.shields.io/badge/Java-24-red?style=for-the-badge&logo=openjdk&logoColor=white)](https://openjdk.org/projects/jdk/24/)\n[![Jackson](https://img.shields.io/badge/Jackson-2.18.0-orange?style=for-the-badge&logo=jackson&logoColor=white)](https://github.com/FasterXML/jackson)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg?style=for-the-badge)](https://opensource.org/licenses/MIT)\n[![Platform: Windows | Mac | Linux](https://img.shields.io/badge/Platform-Windows%20%7C%20Mac%20%7C%20Linux-brightgreen?style=for-the-badge&logo=windows&logoColor=white&logo=apple&logoColor=white&logo=linux&logoColor=white)](https://www.google.com)\n\n---\n\n\uD83D\uDC4B Meet **ClipCop**: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 **ClipCop** is here to make your digital life incredibly smoother, no matter if you're on **Windows, Mac, or Linux!**\n\n## Why ClipCop?\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n* \uD83D\uDCBE **Keeps History Alive:** Forget about losing track! ClipCop stores up to **100 clipboard items for 30 days**, so you can always go back and grab what you need.\n* ☁️ **Feather-Light:** We've made it super efficient! ClipCop **uses minimal memory** with intelligent text compression, keeping your system quick and responsive.\n* \uD83D\uDD0D **Instant Search:** Looking for something specific? Just type! Our **powerful search feature** lets you quickly find any copied text.\n* \uD83D\uDCA1 **Open Source:** Transparency matters! ClipCop is **freely available under the MIT License**, meaning it's built with community trust and is always improving.\n\n---\n\n## Features\n\n* **Clipboard History:** Stores up to 100 recent clipboard entries for easy retrieval.\n* **Quick Paste Popup:** Access your top 10 most recent items with a single click or keypress (Enter to paste, Esc to close).\n* **Searchable History:** Instantly filter your entire clipboard history via a convenient search bar.\n* **Dark/Light Mode:** Seamlessly switch between elegant glassmorphic dark and light themes to suit your preference.\n* **Cross-Platform:** Designed to run smoothly on Windows, Mac, and Linux operating systems.\n* **Draggable UI:** Easily reposition windows by dragging the title bar.\n* **Persistent Storage:** Your clipboard history is automatically saved to `data/clipboard_history.json`, so it's always there when you reopen ClipCop.\n\n---\n\n## Prerequisites\n\nTo get ClipCop up and running, you'll need the following:\n\n* **Java 24 (JDK 24):** Download the latest JDK from [Oracle](https://www.oracle.com/java/technologies/downloads/) or [OpenJDK](https://openjdk.org/install/).\n* **JavaFX SDK 24.0.1:** Get the JavaFX SDK from [Gluon](https://gluonhq.com/products/javafx/).\n* **Jackson Libraries (2.18.0):** These are essential for JSON handling.\n    * `jackson-core-2.18.0.jar`\n    * `jackson-databind-2.18.0.jar`\n    * `jackson-annotations-2.18.0.jar`\n    * `jackson-datatype-jsr310-2.18.0.jar`\n    Download them conveniently from [Maven Repository](https://mvnrepository.com/artifact/com.fasterxml.jackson.core).\n\n---\n\n## Setup\n\nFollow these steps to set up ClipCop:\n\n1.  **Create Project Directory:**\n    ```bash\n    mkdir clipcop\n    cd clipcop\n    mkdir -p src/com/clipboard/controller src/com/clipboard/model src/com/clipboard/util lib data .vscode\n    ```\n\n2.  **Download Dependencies:**\n    * Place the `javafx-sdk-24.0.1` folder in `C:\\Users\\thous\\Downloads\\java\\`.\n    * Place all downloaded Jackson JARs (from Prerequisites) into the `lib/` directory.\n\n3.  **Initialize History:**\n    Create an empty JSON file for your clipboard history:\n    ```bash\n    echo \"[]\" > data/clipboard_history.json\n    ```\n\n4.  **Install VS Code Extensions:**\n    Make sure you have the [Java Extension Pack](https://marketplace.visualstudio.com/items?itemName=redhat.java) installed in VS Code for a smooth development experience.\n\n5.  **Add Project Files:**\n    Copy all the application files (e.g., `MainApp.java`, `ClipboardController.java`, your FXML files, `styles.css`) into their respective directories within your `clipcop` project structure. Ensure your `.vscode/launch.json` and `.vscode/settings.json` are correctly configured with your JDK 24 and JavaFX SDK paths.\n\n6.  **Run App:**\n    * Open the `clipcop` folder in VS Code.\n    * Select the \"ClipboardManager\" configuration in your `launch.json`.\n    * Press `F5` to launch ClipCop.\n\n---\n\n## Usage\n\nClipCop is designed to be intuitive and easy to use:\n\n* **Main Window:**\n    * View and search your complete clipboard history.\n    * Click the \"Show Quick Paste\" button to bring up the handy popup.\n    * Toggle between sleek dark and light modes with the \"\uD83C\uDF19\" / \"☀\" button.\n    * Drag the window by its title bar to reposition it.\n    * Use the \"`-`\" button to minimize and \" `X` \" to close the application.\n\n* **Quick Paste Popup:**\n    * Displays your top 10 most recent clipboard items.\n    * Simply click an item or press `Enter` to paste it into your active application.\n    * Press `Esc` to quickly close the popup.\n    * Toggle dark/light mode with its dedicated button.\n    * Drag the popup by its title bar to move it around.\n\n* **Copy Text:**\n    * Just copy text as you normally would! ClipCop automatically captures it and adds it to your history (up to 100 items).\n\n---\n\n## License\n\nClipCop is open source and distributed under the **MIT License**. Feel free to use, modify, and distribute it as you wish!\n\n## Contributing\n\nContributions are absolutely welcome! If you have ideas for improvements or find a bug, please fork the repository, make your changes, and submit a pull request.\n\n## Troubleshooting\n\nEncountering issues? Here are some common fixes:\n\n* **`Class Version Error`:** Make sure you are definitely using **JDK 24** (you can check with `java -version` in your terminal).\n* **`Missing JARs`:** Double-check that all required Jackson JARs are present in your `lib/` directory.\n* **`JSON Errors`:** Verify that `data/clipboard_history.json` exists and starts with `[]`.\n* **`Dark Mode Issues`:** Ensure your `styles.css` file correctly defines the `.root:dark` and `.component` selectors.\n\nIf you're still stuck, please report issues or errors in the repository, and we'll do our best to help!\n\n---\n\nBuilt by **SMD-Thousif**. Because copying and pasting shouldn't feel like a memory test. \uD83D\uDE09\n````","timestamp":[2025,7,17,22,20,40,408901000]},{"content":"ClipCop: Your Smart Clipboard Manager\n\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother, no matter if you're on Windows, Mac, or Linux!\nWhy ClipCop?\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: Stores up to 100 clipboard items for 30 days.\n☁️ Feather-Light: Uses minimal memory with efficient text compression.\n\uD83D\uDD0D Instant Search: Quickly find any copied text with a powerful search feature.\n\uD83D\uDCA1 Open Source: Freely available under the MIT License.\n\nFeatures\n\nClipboard History: Stores up to 100 recent clipboard entries.\nQuick Paste Popup: Access recent items with a click or keypress (Enter to paste, Esc to close).\nSearchable History: Filter clipboard items instantly via a search bar.\nDark/Light Mode: Toggle between glassmorphic dark and light themes.\nCross-Platform: Runs on Windows, Mac, and Linux.\nDraggable UI: Move windows by dragging the title bar.\nPersistent Storage: Saves history to data/clipboard_history.json.\n\nPrerequisites\n\nJava 24 (JDK 24): Download from Oracle or OpenJDK.\nJavaFX SDK 24.0.1: Download from Gluon.\nJackson Libraries (2.18.0):\njackson-core-2.18.0.jar\njackson-databind-2.18.0.jar\njackson-annotations-2.18.0.jar\njackson-datatype-jsr310-2.18.0.jarDownload from Maven Repository.\n\n\n\nSetup\n\nCreate Project Directory:\nmkdir clipcop\ncd clipcop\nmkdir -p src/com/clipboard/controller src/com/clipboard/model src/com/clipboard/util lib data .vscode\n\n\nDownload Dependencies:\n\nPlace JavaFX SDK in C:\\Users\\thous\\Downloads\\java\\javafx-sdk-24.0.1\\.\nPlace Jackson JARs in lib/.\n\n\nInitialize History:\necho \"[]\" > data/clipboard_history.json\n\n\nInstall VS Code Extensions:\n\nInstall Java Extension Pack in VS Code.\n\n\nAdd Project Files:\n\nCopy all files from the provided project structure (see previous message for files like MainApp.java, ClipboardController.java, etc.).\nEnsure .vscode/launch.json and .vscode/settings.json are configured with JDK 24 and JavaFX paths.\n\n\nRun App:\n\nOpen clipcop in VS Code.\nSelect “ClipboardManager” configuration in launch.json.\nPress F5.\n\n\n\nUsage\n\nMain Window:\nView and search clipboard history.\nClick “Show Quick Paste” to open the popup.\nToggle dark/light mode with “\uD83C\uDF19”/“☀” button.\nDrag window by title bar; use “-” to minimize, “X” to close.\n\n\nQuick Paste Popup:\nShows top 10 clipboard items.\nClick or press Enter to paste an item; Esc to close.\nToggle dark/light mode with “\uD83C\uDF19”/“☀” button.\nDrag popup by title bar.\n\n\nCopy Text: Automatically captures text to history (up to 100 items).\n\nLicense\nClipCop is open source under the MIT License. Feel free to use, modify, and distribute!\nContributing\nContributions are welcome! Fork the repo, make changes, and submit a pull request.\nTroubleshooting\n\nClass Version Error: Ensure JDK 24 is used (java -version).\nMissing JARs: Verify all Jackson JARs in lib/.\nJSON Errors: Check data/clipboard_history.json exists with [].\nDark Mode Issues: Ensure styles.css has .root:dark .component selectors.\n\nReport issues or errors in the repository.","timestamp":[2025,7,17,22,18,56,407654700]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing\nyou copied?\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive:up to 30 days|☁️ Feather-Light | ClipCop uses less memory \ncompresses text | \uD83D\uDD0D Instant Search | \uD83D\uDCA1 Open Source\n\n","timestamp":[2025,7,17,22,15,53,909966600]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing\nyou copied?\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive:up to 30 days|☁️ Feather-Light | ClipCop uses less memory \ncompresses text | \uD83D\uDD0D Instant Search | \uD83D\uDCA1 Open Source\n\n","timestamp":[2025,7,17,22,15,43,408326800]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing\nyou copied?\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive:up to 30 days|☁️ Feather-Light | ClipCop uses less memory \ncompresses text | \uD83D\uDD0D Instant Search | \uD83D\uDCA1 Open Source","timestamp":[2025,7,17,22,15,36,908486500]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing you copied?\n\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive:up to 30 days|☁️ Feather-Light | ClipCop uses less memory \ncompresses text | \uD83D\uDD0D Instant Search | \uD83D\uDCA1 Open Source","timestamp":[2025,7,17,22,15,27,408007800]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more?\nTired of losing that one important thing you copied?\n\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive:up to 30 days|☁️ Feather-Light | ClipCop uses less memory \ncompresses text | \uD83D\uDD0D Instant Search | \uD83D\uDCA1 Open Source","timestamp":[2025,7,17,22,15,13,408451900]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more?\nTired of losing that one important thing you copied?\n\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive:up to 30 days|☁️ Feather-Light | ClipCop uses less memory \ncompresses text\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! O\n\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,14,47,908883100]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more?\nTired of losing that one important thing you copied?\n\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: ClipCop holds onto your old copies for up to 30 days.\n\n☁️ Feather-Light: We've made it super efficient! ClipCop uses less memory because it intelligently compresses text\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! O\n\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,14,0,409164500]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing you copied?\n\uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother,\nno matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: ClipCop holds onto your old copies for up to 30 days.\n\n☁️ Feather-Light: We've made it super efficient! ClipCop uses less memory because it intelligently compresses text\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! O\n\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,13,33,908136900]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\n\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother, no matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: ClipCop holds onto your old copies for up to 30 days.\n\n☁️ Feather-Light: We've made it super efficient! ClipCop uses less memory because it intelligently compresses text\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! O\n\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,12,55,907558300]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother, no matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: Forget about losing track! ClipCop holds onto your old copies for up to 30 days, so you can always go back and grab what you need.\n\n☁️ Feather-Light: We've made it super efficient! ClipCop uses less memory because it intelligently compresses text, keeping your system quick and responsive.\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! Our easy search lets you find anything you've copied, super easily.\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,12,1,407719200]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother, no matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: Forget about losing track! ClipCop holds onto your old copies for up to 30 days, so you can always go back and grab what you need.\n\n☁️ Feather-Light: We've made it super efficient! ClipCop uses less memory because it intelligently compresses text, keeping your system quick and responsive.\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! Our easy search lets you find anything you've copied, super easily.\n\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,11,46,908523200]},{"content":"\uD83D\uDC4B Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux! \uD83D\uDE80\nEver wish your clipboard could do more? Tired of losing that one important thing you copied? \uD83E\uDD14 ClipCop is here to make your digital life incredibly smoother, no matter if you're on Windows, Mac, or Linux!\n\nHere's why ClipCop makes life so much easier than those basic, built-in options:\n\n\uD83D\uDCBE Keeps History Alive: Forget about losing track! ClipCop holds onto your old copies for up to 30 days, so you can always go back and grab what you need.\n\n☁️ Feather-Light: We've made it super efficient! ClipCop uses less memory because it intelligently compresses text, keeping your system quick and responsive.\n\n⚡ Lightning Fast: Get your pasting done in a flash! ClipCop is designed for speed, helping you power through your tasks quicker.\n\n\uD83D\uDD0B Gentle on Your CPU: No need to worry about background drain. It runs quietly and efficiently, saving computational power for what you're really doing.\n\n\uD83D\uDD0D Instant Search: Looking for something specific? Just type! Our easy search lets you find anything you've copied, super easily.\n\n\uD83D\uDCA1 Open Source: Transparency matters! ClipCop is open source, meaning it's built with community trust and is always improving.","timestamp":[2025,7,17,22,10,43,410217000]},{"content":"Meet ClipCop: Your Smart Clipboard for Windows, Mac, & Linux!\n\nEver wish your clipboard could do more? Here's why ClipCop makes life so much easier than default options:\n\nKeeps History Alive: Up to 30 days of old copies, so you never lose track.\n\nFeather-Light: Uses less memory because it compresses text.\n\nLightning Fast: Get your pasting done quicker.\n\nGentle on Your CPU: Runs quietly in the background, saving computational power.\n\nInstant Search: Find anything you've copied, super easily.\n\nOpen Source: Transparent, reliable, and community-driven.","timestamp":[2025,7,17,22,10,14,408587900]},{"content":"Ever wish your clipboard could do more? Here's why ClipCop makes life so much easier than default options:\n\nKeeps History Alive: Up to 30 days of old copies, so you never lose track.\n\nFeather-Light: Uses less memory because it compresses text.\n\nLightning Fast: Get your pasting done quicker.\n\nGentle on Your CPU: Runs quietly in the background, saving computational power.\n\nInstant Search: Find anything you've copied, super easily.\n\nOpen Source: Transparent, reliable, and community-driven.","timestamp":[2025,7,17,22,10,1,979178800]},{"content":"ClipCop is a clipboard manager Compitable for Windows, Mac , Linux \nWhy Clipcop if ther eare some Default Clipboards avaible :\n1. Better Maintainable of older Copy records up to 30 day's \n2. Less memroy usage as texxt is compressed and shown \n3.faster \n4. Consumes less computational power in background \n5. Easy search  \n6. Open source","timestamp":[2025,7,17,22,8,38,908636700]},{"content":"ClipCop is a clipboard manager Compitable for Windows, Mac , Linux \nWhy Clipcop if ther eare some Default Clipboards avaible :\n1. Better Maintainable of older Copy records ","timestamp":[2025,7,17,22,6,58,909019400]},{"content":"package com.clipboard.controller;\n\nimport com.clipboard.model.ClipboardItem;\nimport com.clipboard.util.ClipboardManager;\nimport com.clipboard.util.JsonStorage;\nimport javafx.application.Platform; // Import Platform\nimport javafx.beans.value.ChangeListener;\nimport javafx.beans.value.ObservableValue;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ListCell;\nimport javafx.scene.control.ListView;\nimport javafx.scene.control.TextField;\nimport javafx.stage.Stage;\nimport javafx.stage.StageStyle;\n\npublic class ClipboardController {\n    @FXML private ListView<ClipboardItem> clipboardListView;\n    @FXML private TextField searchField;\n    @FXML private Button quickPasteButton;\n    @FXML private Button minimizeButton;\n    @FXML private Button closeButton;\n    @FXML private Button toggleDarkModeButton;\n    private ObservableList<ClipboardItem> clipboardItems;\n    private ObservableList<ClipboardItem> filteredItems;\n    private ObservableList<ClipboardItem> popupItems;\n    private ClipboardManager clipboardManager;\n    private Stage quickPasteStage;\n    private boolean isDarkMode = false;\n\n    @FXML\n    public void initialize() {\n        clipboardItems = FXCollections.observableArrayList();\n        filteredItems = FXCollections.observableArrayList();\n        popupItems = FXCollections.observableArrayList();\n        filteredItems.addAll(clipboardItems);\n        clipboardListView.setItems(filteredItems);\n\n        clipboardListView.setCellFactory(_ -> new ListCell<ClipboardItem>() {\n            @Override\n            protected void updateItem(ClipboardItem item, boolean empty) {\n                super.updateItem(item, empty);\n                setText(empty || item == null ? null : item.getContent());\n            }\n        });\n\n        searchField.textProperty().addListener(new ChangeListener<String>() {\n            @Override\n            public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {\n                filteredItems.clear();\n                if (newValue == null || newValue.isEmpty()) {\n                    filteredItems.addAll(clipboardItems);\n                } else {\n                    String lowerCaseFilter = newValue.toLowerCase();\n                    for (ClipboardItem item : clipboardItems) {\n                        if (item.getContent().toLowerCase().contains(lowerCaseFilter)) {\n                            filteredItems.add(item);\n                        }\n                    }\n                }\n            }\n        });\n\n        clipboardManager = new ClipboardManager(this::addClipboardItem);\n        clipboardManager.startMonitoring();\n        loadHistory();\n        updateDarkModeButtonText();\n\n        // --- FIX START ---\n        // Defer the code that requires the scene to be available\n        Platform.runLater(() -> {\n            // Initialize style class only if the scene is available\n            if (clipboardListView.getScene() != null) {\n                clipboardListView.getScene().getRoot().getStyleClass().add(\"light\");\n            } else {\n                System.err.println(\"Warning: Scene not available for clipboardListView during Platform.runLater initialization.\");\n            }\n        });\n        // --- FIX END ---\n    }\n\n    private void addClipboardItem(ClipboardItem item) {\n        if (clipboardItems.size() >= 100) {\n            clipboardItems.remove(clipboardItems.size() - 1);\n        }\n        clipboardItems.add(0, item);\n        filteredItems.clear();\n        filteredItems.addAll(clipboardItems);\n        updatePopupItems();\n        JsonStorage.saveClipboardHistory(clipboardItems);\n    }\n\n    private void loadHistory() {\n        clipboardItems.addAll(JsonStorage.loadClipboardHistory());\n        filteredItems.addAll(clipboardItems);\n        updatePopupItems();\n    }\n\n    private void updatePopupItems() {\n        popupItems.clear();\n        int maxItems = Math.min(clipboardItems.size(), 10);\n        for (int i = 0; i < maxItems; i++) {\n            popupItems.add(clipboardItems.get(i));\n        }\n    }\n\n    @FXML\n    private void showQuickPaste() {\n        try {\n            if (quickPasteStage == null) {\n                quickPasteStage = new Stage(StageStyle.TRANSPARENT);\n                FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/com/clipboard/QuickPastePopup.fxml\"));\n                QuickPasteController controller = new QuickPasteController(popupItems);\n                controller.setDarkMode(isDarkMode); // Sync dark mode\n                loader.setController(controller);\n                Scene scene = new Scene(loader.load());\n                scene.getStylesheets().add(getClass().getResource(\"/com/clipboard/styles.css\").toExternalForm());\n                quickPasteStage.setScene(scene);\n                quickPasteStage.getScene().getRoot().setUserData(controller);\n                // Apply initial dark mode to popup\n                if (isDarkMode) {\n                    quickPasteStage.getScene().getRoot().getStyleClass().add(\"dark\");\n                }\n            } else {\n                QuickPasteController controller = (QuickPasteController) quickPasteStage.getScene().getRoot().getUserData();\n                controller.setDarkMode(isDarkMode); // Update dark mode\n            }\n            quickPasteStage.show();\n            quickPasteStage.requestFocus();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    @FXML\n    private void minimizeWindow() {\n        Stage stage = (Stage) minimizeButton.getScene().getWindow();\n        stage.setIconified(true);\n    }\n\n    @FXML\n    private void closeWindow() {\n        Stage stage = (Stage) closeButton.getScene().getWindow();\n        stage.close();\n    }\n\n    @FXML\n    private void toggleDarkMode() {\n        isDarkMode = !isDarkMode;\n        updateDarkModeButtonText();\n        Stage stage = (Stage) toggleDarkModeButton.getScene().getWindow();\n        stage.getScene().getRoot().getStyleClass().remove(isDarkMode ? \"light\" : \"dark\");\n        stage.getScene().getRoot().getStyleClass().add(isDarkMode ? \"dark\" : \"light\");\n        if (quickPasteStage != null && quickPasteStage.isShowing()) {\n            QuickPasteController controller = (QuickPasteController) quickPasteStage.getScene().getRoot().getUserData();\n            controller.setDarkMode(isDarkMode);\n        }\n    }\n\n    public void setDarkMode(boolean darkMode) {\n        isDarkMode = darkMode;\n        updateDarkModeButtonText();\n        // Assuming this method is called after the scene is set up.\n        // It's safer to ensure toggleDarkModeButton.getScene() is not null.\n        if (toggleDarkModeButton.getScene() != null) {\n            Stage stage = (Stage) toggleDarkModeButton.getScene().getWindow();\n            stage.getScene().getRoot().getStyleClass().remove(isDarkMode ? \"light\" : \"dark\");\n            stage.getScene().getRoot().getStyleClass().add(isDarkMode ? \"dark\" : \"light\");\n        } else {\n            System.err.println(\"Warning: Scene not available for toggleDarkModeButton in setDarkMode.\");\n        }\n    }\n\n    private void updateDarkModeButtonText() {\n        toggleDarkModeButton.setText(isDarkMode ? \"☀\" : \"\uD83C\uDF19\");\n    }\n}","timestamp":[2025,7,17,22,3,13,496714600]}]